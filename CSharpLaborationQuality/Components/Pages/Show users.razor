@using BlazorClassLibrary
@using BlazorClassLibrary.Collections
@using BlazorClassLibrary.Collections.Interfaces
@page "/showusers"
@rendermode InteractiveServer

@if (_loading)
{
 <Loading/>
}
else
{
    <CSharpLaborationQuality.Components.TableComponents.TableLab FromApi="FromApi" FilteredUsers="FilteredUsers" Users="Users" FromSavedFile="FromSavedFile" />
}
@code {

    public List<User> Users = new List<User>();
    public List<User> FilteredUsers = new List<User>();
    private bool _loading = true;
    public bool FromSavedFile = false;
    public bool FromApi = true;

    protected override async Task OnInitializedAsync()
    {
        IRemoteDataAccess api = new ApiCollection();
        _=LoadData();
        Users = await api.GetUsers();
        FilteredUsers.AddRange(Users);
    }
    private async Task LoadData()
    {
        await Task.Delay(3000);
        _loading = false;
        StateHasChanged();
    }
}
