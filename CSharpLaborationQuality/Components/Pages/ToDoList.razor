@using BlazorClassLibrary
@using CSharpLaborationQuality.Components.Services;
@inject ITodoService _todoService;

@page "/ToDoList"

<h3>ToDo List</h3>

<div class="border" style="padding: 20px;">
    <h4>New Item</h4>
    <TodoItemForm OnItemAdded="@ItemAdded" />

</div>


<div class="border" style="padding: 20px; margin-top: 20px;">
    <div style="display:flex; flex-direction: column;">
        @foreach (var todo in Todos)
        {
            <div class="flex-center" style="margin-bottom: 10px;">
                <div class="ItemClass(todo)" style="width: 280px;">@todo.Text</div>
                </div>
        }
    
    </div>
</div>

@code {
    private IList<TodoItem> Todos {get; set; } = new List<TodoItem>();

    protected override void OnInitialized()
    {
        Todos = _todoService.GetAll().ToList();
    }

    public string ItemClass(TodoItem item)
    {
        return item.IsDone ? "item-isDone" : "";
    }

    public void ItemChanged()
    {
        Todos = _todoService.GetAll().ToList();
        StateHasChanged();
    }

    public void DeleteItem(TodoItem item)
    {
        _todoService.Delete(item);
        ItemsChanged();
    }
}
