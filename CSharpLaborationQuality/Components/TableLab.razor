@using BlazorClassLibrary
@using BlazorClassLibrary.Collections
@rendermode InteractiveServer

<table class="table table-hover">
	<thead class="thead-dark">
		<tr>
			<th style="cursor: pointer; font-weight: 500;background-color:aliceblue; " @onclick="() => FilteredUsers = sortingCollection.SortByID(FilteredUsers)">
				Id <img style="width: 20px; height: 20px; margin-left: 10px;" src="Images\ArrowUpAndDown.png" />
			</th>
			<th style="cursor: pointer; transition: background-color 0.3s ease; font-weight: 500;background-color: aliceblue; " @onclick="()=> FilteredUsers = sortingCollection.SortByName(FilteredUsers)">
				Name <img style="width: 20px; height: 20px; margin-left: 50px;" src="Images\ArrowUpAndDown.png" />
			</th>
			<th style="cursor: pointer; transition: background-color 0.3s ease; font-weight: 500;background-color:aliceblue; " @onclick="()=> FilteredUsers = sortingCollection.SortByUserName(FilteredUsers)">
				Username <img style="width: 20px; height: 20px; margin-left: 50px;" src="Images\ArrowUpAndDown.png" />
			</th>
			<th style="cursor: pointer; transition: background-color 0.3s ease; font-weight: 500;background-color:aliceblue; " @onclick="()=> FilteredUsers = sortingCollection.SortByEmail(FilteredUsers)">
				Email <img style="width: 20px; height: 20px; margin-left: 50px;" src="Images\ArrowUpAndDown.png" />
			</th>
			<th style="cursor: pointer; transition: background-color 0.3s ease; font-weight: 500;background-color:aliceblue; " @onclick="()=> FilteredUsers = sortingCollection.SortByCity(FilteredUsers)">
				City <img style="width: 20px; height: 20px; margin-left: 50px;" src="Images\ArrowUpAndDown.png" />
			</th>
			<th style="cursor: pointer; transition: background-color 0.3s ease; font-weight: 500;background-color:aliceblue; " @onclick="()=> FilteredUsers = sortingCollection.SortByCompanyName(FilteredUsers)">
				Company Name <img style="width: 20px; height: 20px; margin-left: 50px;" src="Images\ArrowUpAndDown.png" />
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var user in FilteredUsers)
		{
			<tr>
				<td>@user.Id</td>
				<td style=" transition: background-color 0.3s ease; font-weight: 500;background-color:aliceblue; ">
					<span style="display: flex; align-items: center;">
						<img @onclick="() => SpecificUser = (SpecificUser == user ? null : user)" style="cursor: pointer; block-size: 20px; display: flex; align-items: center;" src="Images/PlusSign.png" />
						@user.Name
					</span>
				</td>
				<td>@user.UserName</td>
				<td>@user.Email</td>
				<td>@user.Address.City</td>
				<td>@user.Company.Name</td>
			</tr>
			@if (SpecificUser == user)
			{
				<tr>
					<td colspan="6">
						<div style="background-color: #f8f9fa; padding: 10px; border: 1px solid #ddd;">
							<UserInfoForSpecificUser SpecificUser="@SpecificUser" />
						</div>
					</td>
				</tr>
			}
		}
	</tbody>
</table>

<SearchInputAndMessage SearchTerm="@SearchTerm"
					   SearchTermChanged="(term) => SearchTerm = term"
					   TextMessage="@TextMessage"
					   TextMessageChanged="(message) => TextMessage = message"
					   Users="@Users"
					   FilteredUsers="@FilteredUsers"
					   FilteredUsersChanged="(users) => FilteredUsers = users" />
<UserInfoForSpecificUser SpecificUser="@SpecificUser" />

@code {
	protected override async Task OnInitializedAsync()
	{
		ApiCollection api = new ApiCollection();
		Users = await api.GetUsersFromApi();
		FilteredUsers = Users;
	}

	private List<User> FilteredUsers = new List<User>();
	SortingCollection sortingCollection = new SortingCollection();
	private string? TextMessage { get; set; } = String.Empty;
	private List<User> Users = new();
	private string? SearchTerm = String.Empty;
	private User SpecificUser { get; set; }




}