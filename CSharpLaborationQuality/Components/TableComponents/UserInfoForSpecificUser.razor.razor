@using BlazorClassLibrary
@using BlazorClassLibrary.Collections

@if (SpecificUser != null)
{
    @foreach (var item in ParamInfos)
    {
        if (!string.IsNullOrEmpty(item.Value.ToString()) && !(item.Value.ToString() == "0"))
        {
            <p class="slide-in" style="font-size: 0.8rem; font-family: Georgia; color: black; background-color: white;">
                <span style="font-weight: bold;">@item.Key</span> : @item.Value
            </p>
        }
    }

    @if(!FromApi&&FromSavedFile)
    {
        <button @onclick="ShowUsersTodoList" class="cool-looking-button">
            Your todo list
        </button>
        
        <button @onclick="EditUser" class="cool-looking-button">
            Edit user
        </button>
    } 
}

@code {

    [Parameter]
    public User SpecificUser { get; set; } = new();
    [Parameter]
    public Dictionary<string, object> ParamInfos { get; set; } = new();
    [Parameter]
    public EventCallback<bool> IfShowToDoListChanged { get; set; }
    [Parameter]
    public EventCallback<bool> IfEditUserChanged { get; set; }
    [Parameter]
    public bool FromApi { get; set; }
    [Parameter]
    public bool FromSavedFile { get; set; }
    public bool ShowTodoItems = false;
    private bool IfEditUser = false;
    public void ShowUsersTodoList()
    {
        ShowTodoItems = ShowTodoItems == false ? true : false;
        IfShowToDoListChanged.InvokeAsync(ShowTodoItems);
    }
    private void EditUser()
    {
        IfEditUser = true;
        IfEditUserChanged.InvokeAsync(IfEditUser);
    }
}