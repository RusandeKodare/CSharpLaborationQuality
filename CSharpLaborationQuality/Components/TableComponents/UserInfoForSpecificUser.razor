@using BlazorClassLibrary
@using BlazorClassLibrary.Collections

<UserInfoForSpecificUser_razor IfEditUserChanged="HandleEditUserToggle" FromSavedFile="FromSavedFile" FromApi="FromApi" IfShowToDoListChanged="HandleToDoListToggle" ParamInfos="paramInfos" SpecificUser="SpecificUser"/>
@code {
    [Parameter]
    public User SpecificUser { get; set; } = new User();
    [Parameter]
    public EventCallback<bool> IfShowToDoListChanged { get; set; }
    [Parameter]
    public EventCallback<bool> IfEditUserChanged { get; set; }
    [Parameter]
    public bool FromApi { get; set; }
    [Parameter]
    public bool FromSavedFile { get; set; }
    public Dictionary<string, object> paramInfos = new Dictionary<string, object>();

    private async Task HandleToDoListToggle(bool showToDoList)
    {
        await IfShowToDoListChanged.InvokeAsync(showToDoList);
    }

    private async Task HandleEditUserToggle(bool showEditUser)
    {
        await IfEditUserChanged.InvokeAsync(showEditUser);
    }

    protected override void OnInitialized()
    {
        paramInfos = new Dictionary<string, object>
        {
            { "Name", SpecificUser.Name },
            { "Age", SpecificUser.Age??0 },
            { "Username", SpecificUser.UserName },
            { "Email", SpecificUser.Email },
            { "Phone", SpecificUser.Phone },
            { "Website", SpecificUser.Website },
            { "Street", SpecificUser.Address.Street },
            { "City", SpecificUser.Address.City},
            { "Suite", SpecificUser.Address.Suite },
            { "ZipCode", SpecificUser.Address.ZipCode },
            { "Latitude", SpecificUser.Address.Geo.Lat },
            { "Longitude", SpecificUser.Address.Geo.Lng },
            { "Company name", SpecificUser.Company.Name },
            { "Catch phrase", SpecificUser.Company.CatchPhrase },
            { "Company BS", SpecificUser.Company.BS }
        };
    }
}
